name: Navaids
type: object
key: _id
data:
  pre_run: >
    if (!inputs.navaids) {
      throw new Error('navaids must be provided as an input');
    }
    if (!globals.codes) {
      globals.codes = [];
    }
    this.data.fixed = inputs.navaids.length;
  post_build: >
    if (this.navaid_ident) {
      globals.codes.push({
        id: this.navaid_id,
        designation: 'navaid',
        code_type: 'ident',
        code: this.navaid_ident
      });
    }
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: "return 'navaid_' + this.navaid_id"
  navaid_id:
    type: integer
    description: The navaid id
    data:
      build: "return inputs.navaids[document_index].id || chance.integer({min: 100000, max: 999999})"
  doc_type:
    type: string
    description: The document type
    data:
      value: navaid
  navaid_ident:
    type: string
    description: The The navaid identifer code if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].ident || null"
  navaid_name:
    type: string
    description: The name of the navaid if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].name || null"
  type:
    type: string
    description: The type of navaid if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].type || null"
  frequency_khz:
    type: float
    description: The frequency in khz of the navaid if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].frequency_khz || null"
  geo:
    type: object
    properties:
      latitude:
        type: float
        description: The latitude of the navaid if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].latitude_deg || null"
      longitude:
        type: float
        description: The longitude of the navaid if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].longitude_deg || null"
  elevation:
    type: integer
    description: The elevation in ft of the navaid if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].elevation_ft || null"
  iso_country:
    type: string
    description: The ISO country code that the navaid is in
    data:
      build: "return inputs.navaids[document_index].iso_country"
  dme:
    type: object
    properties:
      frequency_khz:
        type: float
        description: The frequency in khz an associated DME if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].dme_frequency_khz || null"
      channel:
        type: string
        description: The DME channel if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].dme_channel || null"
      latitude:
        type: float
        description: The DME latitude of the navaid if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].dme_latitude_deg || null"
      longitude:
        type: float
        description: The DME longitude in khz of the navaid if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].dme_longitude_deg || null"
      elevation:
        type: float
        description: The elevation of the DME in ft if available, otherwise null
        data:
          build: "return inputs.navaids[document_index].dme_elevation_ft || null"
  magnetic_variation:
    type: float
    description: The magnetic variation at the navaid's location if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].magnetic_variation_deg || null"
  usage_type:
    type: string
    description: The usage type of the navaid if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].usageType || null"
  power:
    type: string
    description: The navaid's power if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].power || null"
  associated_airport_icao_code:
    type: string
    description: An airport icao_code or ident that the navaid is associated with if available, otherwise null
    data:
      build: "return inputs.navaids[document_index].associated_airport || null"
