name: Likes
type: object
key: _id
data:
  pre_run: >
    this.data.fixed = documents.Posts.length * 10;
  dependencies:
    - Users
    - Posts
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: "return 'like_' + this.like_id;"
  doc_type:
    type: string
    description: The document type
    data:
      value: "like"
  like_id:
    type: string
    description: The post id as a GUID
    data:
      build: "return chance.guid()"
  post_id:
    type: string
    description: The post id as a GUID
    data:
      build: "return documents.Posts[chance.integer({min:0, max: documents.Posts.length - 1})].post_id"
  user_id:
    type: integer
    description: The user_id that liked the post
    data:
      build: "return documents.Users[chance.integer({min:0, max: documents.Users.length - 1})].user_id"
  like_date:
    type: integer
    description: The date of the like
    data:
      build: "return new Date(chance.bool({likelihood: 30}) ? faker.date.past() : faker.date.recent()).getTime()"

