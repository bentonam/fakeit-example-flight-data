name: Friends
type: object
key: _id
data:
  pre_run: >
    this.data.fixed = documents.Users.length;
  dependencies:
    - Users
properties:
  _id:
    type: string
    description: The document id
    data:
      post_build: "return 'user_' + this.user_id + '_addresses'"
  doc_type:
    type: string
    description: The document type
    data:
      value: "user-friends"
  user_id:
    type: integer
    description: The user_id the lookup is for
    data:
      build: "return documents.Users[document_index].user_id"
  friends:
    type: array
    description: An array of friends (user_id)
    data:
      post_build: >
        var friends = [];
        var added = [];
        var rand = chance.integer({min: 10, max: 200});
        for (var i = 0; i < rand; i++) {
          user = documents.Users[chance.integer({min: 0, max: documents.Users.length -1})];
          if (user.user_id !== this.user_id && added.indexOf(user.user_id) === -1) {
            added.push(user.user_id);
            friends.push({
              user_id: user.user_id,
              date_friended: new Date(chance.bool({likelihood: 30}) ? faker.date.past() : faker.date.recent()).getTime()
            });
          }
        }
        return friends;